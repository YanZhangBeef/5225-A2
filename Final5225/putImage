import json
import boto3
import base64

dynamodb = boto3.resource('dynamodb')
table = dynamodb.Table('imageTags')

def lambda_handler(event, context):

    http_methods = event['httpMethod']
    
    if http_methods != 'PUT':
        response = {
            'statusCode': 200,
            'headers' : {
            'Access-Control-Allow-Origin': '*',
            'Access-Control-Allow-Headers': '*',
            'Access-Control-Allow-Methods': 'GET, POST, PATCH, PUT, DELETE, OPTIONS',
            "Access-Control-Allow-Credentials" : 'true'
            }
        }
    

    if http_methods == 'PUT':
        try:
            body = json.loads(event['body'])
        except:
            a = base64.b64decode(str(event['body']))
            body = json.loads(a)
        
        urlToUpdate = body['url']
        addOrRemove = body['type']
        tags = body['tags'].split(',') #list
        # https://6hyu9pfbw1.execute-api.us-east-1.amazonaws.com/dev/api
        # PUT
        # {"url":"<string>", "type":<string>, "tags":<string>}
        # {"url": "https://imagetodetect.s3.amazonaws.com/5.jpg","type": "1","tags": "person,car,bus"}

        result = table.scan()
        resultItems = result['Items']
        updateFeedback = {}
        updateStatus = 'notFound'
        
        for i in resultItems:
            imageUrl = i['url']
            if imageUrl == urlToUpdate:
                
                if addOrRemove == "1":
                    
                    tagExtend = []
                    imageTag = i['tag']  #图片本身的tag
                    imageTagList = imageTag.split(',')
                    
                    if imageTag == '':
                        for tagToUpdate in tags:  #用户输入的每一个tag
                            if tagToUpdate not in tagExtend:
                                tagExtend.append(tagToUpdate)
                        tagExtendStr = ','.join(tagExtend)
                        updatedTag = tagExtendStr
                    else:
                        for tagToUpdate in tags:  #用户输入的每一个tag
                            if (tagToUpdate not in imageTagList) and (tagToUpdate not in tagExtend):
                                tagExtend.append(tagToUpdate)
                        if len(tagExtend) == 0:
                            updatedTag = imageTag
                        else:
                            tagExtendStr = ','.join(tagExtend)
                            updatedTag = imageTag + ',' + tagExtendStr
                    table.update_item(
                        Key={
                            'id': i['id']
                        },
                        UpdateExpression='SET tag = :val1',
                        ExpressionAttributeValues={
                            ':val1': updatedTag
                        }
                    )
                    updateStatus = 'added tag successfully'
                    break

                if addOrRemove == "0":
                    imageTag = i['tag']
                    imageTagList = imageTag.split(',')
                    #tagExtend = ''
                    for tagToUpdate in tags:
                        if tagToUpdate in imageTagList:
                            imageTagList.remove(tagToUpdate)
                    updatedTag = ','.join(imageTagList)
                    table.update_item(
                        Key={
                            'id': i['id']
                        },
                        UpdateExpression='SET tag = :val1',
                        ExpressionAttributeValues={
                            ':val1': updatedTag
                        }
                    )
                    updateStatus = 'delete tag successfully'
                    break
        
        finalResult = table.scan()
        finalResultItems = finalResult['Items']
        for i in finalResultItems:
            if urlToUpdate == i['url']:
                finalImageTag = i['tag']
        
        updateFeedback['update'] = imageUrl
        #updateFeedback['tpye'] = addOrRemove
        updateFeedback['new tags'] = updateStatus
        updateFeedback['status'] = updateStatus
        
        if updateStatus == 'notFound':
            updateFeedback['update'] = "notFound"
        response = {
            'statusCode': 200,
            'body': json.dumps(updateFeedback),
            'headers' : {
            'Access-Control-Allow-Origin': '*',
            'Access-Control-Allow-Headers': '*',
            'Access-Control-Allow-Methods': 'GET, POST, PATCH, PUT, DELETE, OPTIONS',
            "Access-Control-Allow-Credentials" : 'true'
            }
        }

    return response
